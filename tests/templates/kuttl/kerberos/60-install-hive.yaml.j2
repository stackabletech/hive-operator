---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |
        kubectl apply -n $NAMESPACE -f - <<EOF
        ---
        apiVersion: hive.stackable.tech/v1alpha1
        kind: HiveCluster
        metadata:
          name: hive
        spec:
          image:
            productVersion: "{{ test_scenario['values']['hive'] }}"
            pullPolicy: IfNotPresent
          clusterConfig:
            database:
              connString: jdbc:postgresql://postgresql:5432/hive
              user: hive
              password: hive
              dbType: postgres
            hdfs:
              configMap: hdfs
            kerberos:
              tlsSecretClass: tls
              kerberosSecretClass: kerberos-$NAMESPACE
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
            vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
          metastore:
            #podOverrides:
            #  spec:
            #    volumes:
            #    - name: kerberos-config
            #      configMap:
            #        name: krb5-kdc
            #    - name: hdfs-config
            #      configMap:
            #        name: hdfs-kerberos
            #    containers:
            #    - name: hive
            #      volumeMounts:
            #      - name: kerberos-config
            #        mountPath: /etc/krb5.conf
            #        subPath: krb5.conf
            #      - name: hdfs-config
            #        mountPath: /etc/hadoop/conf
            #      - name: hdfs-config
            #        mountPath: /stackable/config/core-site.xml
            #        subPath: core-site.xml
            config:
              logging:
                enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
            roleGroups:
              default:
                replicas: 1
                configOverrides:
                  hive-site.xml:
                    #hive.metastore.kerberos.keytab.file: /stackable/kerberos/hive.keytab
                    #hive.metastore.kerberos.principal: hive/_HOST@{{ test_scenario['values']['kerberos-realm'] }}
                    #hive.metastore.sasl.enabled: "true"
                    #hive.metastore.client.kerberos.principal: hive/_HOST@{{ test_scenario['values']['kerberos-realm'] }}
        EOF

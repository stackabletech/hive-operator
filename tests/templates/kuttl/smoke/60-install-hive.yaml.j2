---
apiVersion: hive.stackable.tech/v1alpha1
kind: HiveCluster
metadata:
  name: hive
spec:
  image:
{% if test_scenario['values']['hive'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['hive'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['hive'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['hive'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    database:
      connString: jdbc:postgresql://postgresql:5432/hive
      credentialsSecret: hive-credentials
      dbType: postgres
    s3:
      reference: minio
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  metastore:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    configOverrides:
      hive-env.sh:
        HADOOP_HEAPSIZE: "512" # also set by the operator
        COMMON_VAR: role-value # overridden by role group below
        ROLE_VAR: role-value   # only defined here at role level
    roleGroups:
      default:
        replicas: 1
        envOverrides:
          COMMON_VAR: group-value # overrides role value
          GROUP_VAR: group-value # only defined here at group level
        configOverrides:
          hive-env.sh:
            COMMON_VAR: group-value # overridden by role group below
            GROUP_VAR: group-value # only defined here at group level

---
apiVersion: s3.stackable.tech/v1alpha1
kind: S3Connection
metadata:
  name: minio
spec:
  host: minio
  port: 9000
  accessStyle: Path
  credentials:
    secretClass: test-hive-s3-secret-class
{% if test_scenario['values']['s3-use-tls'] == 'true' %}
  tls:
    verification:
      server:
        caCert:
          secretClass: minio-tls-certificates
{% endif %}
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: test-hive-s3-secret-class
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: test-hive-s3-secret
  labels:
    secrets.stackable.tech/class: test-hive-s3-secret-class
stringData:
  accessKey: hive
  secretKey: hivehive
---
apiVersion: v1
kind: Secret
metadata:
  name: hive-credentials
type: Opaque
stringData:
  username: hive
  password: hive
